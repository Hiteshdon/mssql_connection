digraph "read_and_convert"
{
 // LATEX_PDF_SIZE
  bgcolor="transparent";
  edge [fontname=Helvetica,fontsize=10,labelfontname=Helvetica,labelfontsize=10];
  node [fontname=Helvetica,fontsize=10,shape=box,height=0.2,width=0.4];
  rankdir="LR";
  Node1 [id="Node000001",label="read_and_convert",height=0.2,width=0.4,color="gray40", fillcolor="grey60", style="filled", fontcolor="black",tooltip="For UTF-8 and similar, tds_iconv() may encounter a partial sequence when the chunk boundary is not al..."];
  Node1 -> Node2 [id="edge1_Node000001_Node000002",color="steelblue1",style="solid",tooltip=" "];
  Node2 [id="Node000002",label="tds_convert_stream",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01479.html#a9d8eb43a81ff58ab423dce0ce95b9564",tooltip="Reads and writes from a stream converting characters."];
  Node2 -> Node3 [id="edge2_Node000002_Node000003",color="steelblue1",style="solid",tooltip=" "];
  Node3 [id="Node000003",label="tds_iconv",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a00588.html#ga87db49044919f1bc84c0ff5e9ab00304",tooltip="Wrapper around iconv(3)."];
  Node3 -> Node4 [id="edge3_Node000003_Node000004",color="steelblue1",style="solid",tooltip=" "];
  Node4 [id="Node000004",label="skip_one_input_sequence",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a00588.html#ga3380140fc6eb9f2090c430f40e846876",tooltip="Move the input sequence pointer to the next valid position."];
  Node4 -> Node5 [id="edge4_Node000004_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node5 [id="Node000005",label="tds_sys_iconv_open",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a00588.html#ga900b0bce08c6bfc2e7c988f4b5970516",tooltip="Inputs are FreeTDS canonical names, no other."];
  Node3 -> Node5 [id="edge5_Node000003_Node000005",color="steelblue1",style="solid",tooltip=" "];
  Node1 -> Node6 [id="edge6_Node000001_Node000006",color="steelblue1",style="solid",tooltip=" "];
  Node6 [id="Node000006",label="tds_datain_stream_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01479.html#abc3a77c8aa28842e7f28583cbabc1415",tooltip="Initialize a data input stream."];
  Node6 -> Node7 [id="edge7_Node000006_Node000007",color="steelblue1",style="solid",tooltip=" "];
  Node7 [id="Node000007",label="tds_datain_stream_read",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01479.html#a04b537d889f7d4c9b9701eb81baf7efd",tooltip="Reads data from network for input stream."];
  Node7 -> Node8 [id="edge8_Node000007_Node000008",color="steelblue1",style="solid",tooltip=" "];
  Node8 [id="Node000008",label="tds_get_n",height=0.2,width=0.4,color="red", fillcolor="#FFF0F0", style="filled",URL="$a00591.html#gae777dd57e8d1bb40349d7d7d8434fddf",tooltip="Get N bytes from the buffer and return them in the already allocated space   given to us."];
  Node1 -> Node11 [id="edge9_Node000001_Node000011",color="steelblue1",style="solid",tooltip=" "];
  Node11 [id="Node000011",label="tds_staticout_stream_init",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01479.html#a9fe0d3799d2e3bde49b614c9d0c3785d",tooltip="Initialize an output stream for write into a static allocated buffer."];
  Node11 -> Node12 [id="edge10_Node000011_Node000012",color="steelblue1",style="solid",tooltip=" "];
  Node12 [id="Node000012",label="tds_staticout_stream\l_write",height=0.2,width=0.4,color="grey40", fillcolor="white", style="filled",URL="$a01479.html#a1d92ebe06f18378ac17ccfd20db05126",tooltip="Writes data to a static allocated buffer."];
}
